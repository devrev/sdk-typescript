/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as DevRev from "../../../../../api/index";
import * as core from "../../../../../core";
import { ConversationsUpdateRequestAppliesToParts } from "../../../../types/ConversationsUpdateRequestAppliesToParts";
import { ConversationsUpdateRequestMetadata } from "../../../../types/ConversationsUpdateRequestMetadata";
import { StageUpdate } from "../../../../types/StageUpdate";
import { ConversationsUpdateRequestTags } from "../../../../types/ConversationsUpdateRequestTags";
import { ConversationsUpdateRequestUserSessions } from "../../../../types/ConversationsUpdateRequestUserSessions";

export const ConversationsUpdateRequest: core.serialization.Schema<
    serializers.ConversationsUpdateRequest.Raw,
    DevRev.ConversationsUpdateRequest
> = core.serialization.object({
    appliesToParts: core.serialization.property(
        "applies_to_parts",
        ConversationsUpdateRequestAppliesToParts.optional()
    ),
    description: core.serialization.string().optional(),
    group: core.serialization.string().optional(),
    id: core.serialization.string(),
    isSpam: core.serialization.property("is_spam", core.serialization.boolean().optional()),
    metadata: ConversationsUpdateRequestMetadata.optional(),
    stage: StageUpdate.optional(),
    status: core.serialization.string().optional(),
    tags: ConversationsUpdateRequestTags.optional(),
    title: core.serialization.string().optional(),
    userSessions: core.serialization.property("user_sessions", ConversationsUpdateRequestUserSessions.optional()),
});

export declare namespace ConversationsUpdateRequest {
    interface Raw {
        applies_to_parts?: ConversationsUpdateRequestAppliesToParts.Raw | null;
        description?: string | null;
        group?: string | null;
        id: string;
        is_spam?: boolean | null;
        metadata?: ConversationsUpdateRequestMetadata.Raw | null;
        stage?: StageUpdate.Raw | null;
        status?: string | null;
        tags?: ConversationsUpdateRequestTags.Raw | null;
        title?: string | null;
        user_sessions?: ConversationsUpdateRequestUserSessions.Raw | null;
    }
}
